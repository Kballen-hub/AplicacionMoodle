define("tiny_recordrtc/audio_recorder",["exports","./base_recorder","./modal","tiny_recordrtc/common","./convert_to_mp3","core/toast"],(function(_exports,_base_recorder,_modal,_common,_convert_to_mp,_toast){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Tiny Record RTC - audio recorder configuration.
   *
   * @module      tiny_recordrtc/audio_recorder
   * @copyright   2022 Stevani Andolo <stevani@hotmail.com.au>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_base_recorder=_interopRequireDefault(_base_recorder),_modal=_interopRequireDefault(_modal);class Audio extends _base_recorder.default{fileExtensions={"audio/ogg":"ogg","audio/mp4":"mp4","audio/webm":"webm"};configurePlayer(){return this.modalRoot.querySelector("audio")}getSupportedTypes(){return["audio/ogg;codecs=opus","audio/mp4;codecs=opus","audio/mp4;codecs=wav","audio/mp4;codecs=mp3","audio/webm;codecs=opus"]}getRecordingOptions(){return{audioBitsPerSecond:parseInt(this.config.audiobitrate),audioBitsPerSecondInKb:parseInt(this.config.audiobitrate/1e3)}}getMediaConstraints(){return{audio:!0}}getRecordingType(){return"audio"}getTimeLimit(){return this.config.audiotimelimit}getEmbedTemplateName(){return"tiny_recordrtc/embed_audio"}getFileName(prefix){return`${prefix}-audio.${this.getFileExtension()}`}getFileExtension(){if(1===this.config.audiortcformat)return"mp3";const options=super.getParsedRecordingOptions();if(null!=options&&options.mimeType){const mimeType=options.mimeType.split(";")[0];return this.fileExtensions[mimeType]}return window.console.warn("Unknown file type for MediaRecorder API"),""}static getModalClass(){return class extends _modal.default{static TYPE=`${_common.component}/audio_recorder`;static TEMPLATE=`${_common.component}/audio_recorder`}}async uploadRecording(){if("mp3"===this.getFileExtension())try{const options=this.getRecordingOptions();this.blob=await(0,_convert_to_mp.convertMp3)(this.player.src,options.audioBitsPerSecondInKb),this.player.src=URL.createObjectURL(this.blob)}catch(error){const message=`MP3 conversion failed: ${error.message||"Unknown error"}. Please try again.`;return(0,_toast.add)(message,{type:"error",delay:6e3}),void this.setUploadButtonState(!1)}super.uploadRecording()}}return _exports.default=Audio,_exports.default}));

//# sourceMappingURL=audio_recorder.min.js.map